seed: 42              # Random seed for reproducibility

# Data Simulation Parameters (src/simulate.py)
simulate:
  n_samples_per_class: 100
  n_features: 5
  mean_healthy: 0.0
  std_healthy: 1.0
  mean_diseased: 0.8 # Slightly different mean for diseased class
  std_diseased: 1.2
  out_file: 'data/raw/measurements.csv' # Output file for simulated data

# Data Preparation Parameters (src/prepare.py)
prepare:
  split_ratio: 0.3   # Proportion of data for the test set
  train_out: 'data/processed/train.csv'
  test_out: 'data/processed/test.csv'

# Training Parameters (src/train.py)
train:
  model_type: 'RandomForest' #'LogisticRegression' # Could be 'RandomForest' later
  model_out: 'models/model.joblib'
  feature_importance_plot: 'plots/feature_importance.png'
  predicted_probabilities_plot: 'plots/predicted_probabilities_train.png'
  # Logistic Regression specific params
  logreg:
    C: 1.0            # Regularization strength
  # Random Forest specific params (for later experiment)
  rf:
    n_estimators: 100
    max_depth: 10
# Evaluation Parameters (src/evaluate.py)
evaluate:
  metrics_out: 'metrics/metrics.json'
  confusion_matrix_plot: 'plots/confusion_matrix.png'
  roc_curve_plot: 'plots/roc_curve.png'
